name: Documentation Generation

on:
  push:
    branches: [ "master" ]
    paths:
      - 'app/src/main/kotlin/**'
      - 'README.md'
      - 'docs/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'app/src/main/kotlin/**'
      - 'README.md'
      - 'docs/**'
  schedule:
    - cron: '0 4 * * 0'  # Weekly documentation update on Sunday at 4 AM

jobs:
  generate-docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Generate Dokka documentation
        run: ./gradlew dokkaHtml --no-daemon --build-cache
        
      - name: Generate API documentation
        run: |
          mkdir -p docs/api
          cp -r build/docs/dokka/* docs/api/
          
      - name: Generate project documentation
        run: |
          mkdir -p docs/project
          
          # Generate project structure
          cat > docs/project/structure.md << 'EOF'
          # Project Structure
          
          This document describes the CloudlyMC project structure and architecture.
          
          ## Directory Structure
          
          ```
          EOF
          
          tree -a -I '.git|.gradle|build|bin' >> docs/project/structure.md
          
          cat >> docs/project/structure.md << 'EOF'
          ```
          
          ## Key Components
          
          - **app/src/main/kotlin/**: Main Kotlin source code
          - **app/src/main/resources/**: Plugin resources and configuration
          - **config/**: Configuration files and templates
          - **docs/**: Generated documentation
          - **content/**: Project assets and media
          
          ## Build System
          
          The project uses Gradle with Kotlin DSL for build configuration.
          
          EOF
          
      - name: Generate configuration documentation
        run: |
          mkdir -p docs/config
          
          # Document configuration files
          cat > docs/config/README.md << 'EOF'
          # Configuration Documentation
          
          This document describes the configuration options for CloudlyMC.
          
          ## Configuration Files
          
          ### plugin.yml
          The main plugin configuration file that defines plugin metadata.
          
          ### config.yml
          Main configuration file for plugin settings.
          
          ### Language Files
          - `lang/en.yml`: English language file
          - `lang/de.yml`: German language file
          
          ## Configuration Options
          
          EOF
          
          # Extract configuration from source files
          if [ -f "app/src/main/resources/config.yml" ]; then
              echo "### Default Configuration" >> docs/config/README.md
              echo "" >> docs/config/README.md
              echo '```yaml' >> docs/config/README.md
              cat app/src/main/resources/config.yml >> docs/config/README.md
              echo '```' >> docs/config/README.md
          fi
          
      - name: Generate changelog
        run: |
          mkdir -p docs/changelog
          
          # Generate changelog from git history
          cat > docs/changelog/CHANGELOG.md << 'EOF'
          # Changelog
          
          All notable changes to this project will be documented in this file.
          
          EOF
          
          # Get recent commits grouped by type
          git log --pretty=format:"%h|%s|%an|%ad" --date=short --since="30 days ago" | while IFS='|' read -r hash subject author date; do
              echo "- $subject ([${hash}](https://github.com/${{ github.repository }}/commit/${hash})) - $author ($date)" >> docs/changelog/CHANGELOG.md
          done
          
      - name: Generate README badges
        run: |
          # Create badges for README
          cat > docs/badges.md << 'EOF'
          <!-- Auto-generated badges -->
          ![Build Status](https://img.shields.io/github/actions/workflow/status/becloudly/CloudlyMC/gradle-build.yml?branch=master&label=Build&logo=github)
          ![Security](https://img.shields.io/github/actions/workflow/status/becloudly/CloudlyMC/security.yml?branch=master&label=Security&logo=security)
          ![Code Quality](https://img.shields.io/github/actions/workflow/status/becloudly/CloudlyMC/sonarqube.yml?branch=master&label=Quality&logo=sonarqube)
          ![License](https://img.shields.io/github/license/becloudly/CloudlyMC)
          ![Version](https://img.shields.io/github/v/release/becloudly/CloudlyMC?include_prereleases)
          ![Issues](https://img.shields.io/github/issues/becloudly/CloudlyMC)
          ![Pull Requests](https://img.shields.io/github/issues-pr/becloudly/CloudlyMC)
          ![Language](https://img.shields.io/github/languages/top/becloudly/CloudlyMC)
          ![Code Size](https://img.shields.io/github/languages/code-size/becloudly/CloudlyMC)
          EOF
          
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: |
            docs/
            build/docs/
          retention-days: 30
          
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          cname: docs.cloudly.de
          
      - name: Commit documentation updates
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "ðŸ“š Update auto-generated documentation" || exit 0
          git push
          
      - name: Comment PR with documentation preview
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸ“š Documentation Preview
            
            The documentation has been generated for this PR.
            
            ### ðŸ“Š Generated Files
            - API Documentation: Dokka HTML
            - Project Structure: Updated
            - Configuration Docs: Updated
            - Changelog: Updated
            
            ### ðŸ”— Links
            - [Download Documentation Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [View Build Log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            The documentation will be automatically deployed when this PR is merged.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
