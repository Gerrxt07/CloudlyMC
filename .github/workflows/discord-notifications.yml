name: Discord Notifications

on:
  workflow_run:
    workflows: ["Build and Package", "Create Release", "SonarQube Analysis", "Security Analysis", "Pull Request Testing"]
    types: [completed]
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, closed]

jobs:
  discord-notification:
    name: Discord Notification
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get workflow info
        id: workflow-info
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "workflow_name=${{ github.event.workflow_run.name }}" >> $GITHUB_OUTPUT
            echo "workflow_status=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
            echo "workflow_url=${{ github.event.workflow_run.html_url }}" >> $GITHUB_OUTPUT
            echo "commit_sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          else
            echo "workflow_name=${{ github.workflow }}" >> $GITHUB_OUTPUT
            echo "workflow_status=running" >> $GITHUB_OUTPUT
            echo "workflow_url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
            echo "commit_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
          
      - name: Get commit info
        id: commit-info
        run: |
          # Use proper encoding to handle special characters
          COMMIT_SHA="${{ steps.workflow-info.outputs.commit_sha }}"
          
          # Get commit message and encode it properly
          COMMIT_MESSAGE=$(git log --format=%B -n 1 "$COMMIT_SHA" | head -1 | tr -d '\n' | sed 's/"/\\"/g')
          COMMIT_AUTHOR=$(git log --format=%an -n 1 "$COMMIT_SHA" | tr -d '\n' | sed 's/"/\\"/g')
          
          # Write to files instead of using problematic output format
          echo "$COMMIT_MESSAGE" > /tmp/commit_message.txt
          echo "$COMMIT_AUTHOR" > /tmp/commit_author.txt
          
          # Use proper output encoding
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "commit_author<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "Commit message: $COMMIT_MESSAGE"
          echo "Commit author: $COMMIT_AUTHOR"
          
      - name: Send Discord notification for workflow completion
        if: github.event_name == 'workflow_run'
        uses: actions/github-script@v7
        with:
          script: |
            const webhook = '${{ secrets.DISCORD_WEBHOOK }}';
            if (!webhook) {
              console.log('Discord webhook not configured, skipping notification');
              return;
            }
            
            // Get commit info safely
            const { execSync } = require('child_process');
            const commitSha = '${{ steps.workflow-info.outputs.commit_sha }}';
            
            let commitMessage = '';
            let commitAuthor = '';
            
            try {
              commitMessage = execSync(`git log --format=%B -n 1 ${commitSha}`, { encoding: 'utf8' }).trim().split('\n')[0];
              commitAuthor = execSync(`git log --format=%an -n 1 ${commitSha}`, { encoding: 'utf8' }).trim();
            } catch (error) {
              console.error('Error getting commit info:', error);
              commitMessage = 'Unable to retrieve commit message';
              commitAuthor = 'Unknown';
            }
            
            // Clean up commit message for Discord
            commitMessage = commitMessage.replace(/"/g, '\\"').substring(0, 200);
            
            const workflowStatus = '${{ steps.workflow-info.outputs.workflow_status }}';
            const color = workflowStatus === 'success' ? 3066993 : workflowStatus === 'failure' ? 15158332 : 16776960;
            const statusEmoji = workflowStatus === 'success' ? '‚úÖ Success' : workflowStatus === 'failure' ? '‚ùå Failed' : '‚ö†Ô∏è Cancelled';
            
            const payload = {
              embeds: [{
                title: `üîÑ Workflow Completed: ${{ steps.workflow-info.outputs.workflow_name }}`,
                description: commitMessage,
                color: color,
                fields: [
                  {
                    name: "Status",
                    value: statusEmoji,
                    inline: true
                  },
                  {
                    name: "Branch",
                    value: "`${{ steps.workflow-info.outputs.branch }}`",
                    inline: true
                  },
                  {
                    name: "Author",
                    value: commitAuthor,
                    inline: true
                  },
                  {
                    name: "Commit",
                    value: `[${commitSha.substring(0, 7)}](${{ github.server_url }}/${{ github.repository }}/commit/${commitSha})`,
                    inline: true
                  },
                  {
                    name: "Workflow",
                    value: "[View Run](${{ steps.workflow-info.outputs.workflow_url }})",
                    inline: true
                  }
                ],
                timestamp: new Date().toISOString(),
                footer: {
                  text: "CloudlyMC CI/CD",
                  icon_url: "https://github.com/${{ github.repository }}/blob/master/content/Cloudly-Abstract_Scaled-Round.png?raw=true"
                }
              }]
            };
            
            // Send to Discord
            const fetch = require('node-fetch');
            try {
              const response = await fetch(webhook, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload)
              });
              
              if (!response.ok) {
                console.error('Discord webhook failed:', response.status, response.statusText);
              } else {
                console.log('Discord notification sent successfully');
              }
            } catch (error) {
              console.error('Error sending Discord notification:', error);
            }
            
      - name: Send Discord notification for PR events
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const webhook = '${{ secrets.DISCORD_WEBHOOK }}';
            if (!webhook) {
              console.log('Discord webhook not configured, skipping notification');
              return;
            }
            
            const action = '${{ github.event.action }}';
            const merged = '${{ github.event.pull_request.merged }}';
            
            let title = '';
            let color = 0;
            
            if (action === 'opened') {
              title = 'üîÄ Pull Request Opened';
              color = 3066993;
            } else if (action === 'closed' && merged === 'true') {
              title = '‚úÖ Pull Request Merged';
              color = 5763719;
            } else if (action === 'closed') {
              title = '‚ùå Pull Request Closed';
              color = 15158332;
            } else {
              title = 'üîÑ Pull Request Updated';
              color = 16776960;
            }
            
            const payload = {
              embeds: [{
                title: title,
                description: `${{ github.event.pull_request.title }}`.replace(/"/g, '\\"'),
                color: color,
                fields: [
                  {
                    name: "Author",
                    value: "${{ github.event.pull_request.user.login }}",
                    inline: true
                  },
                  {
                    name: "Branch",
                    value: "`${{ github.event.pull_request.head.ref }}` ‚Üí `${{ github.event.pull_request.base.ref }}`",
                    inline: true
                  },
                  {
                    name: "PR Number",
                    value: "#${{ github.event.pull_request.number }}",
                    inline: true
                  },
                  {
                    name: "Changes",
                    value: "+${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}",
                    inline: true
                  },
                  {
                    name: "Link",
                    value: "[View PR](${{ github.event.pull_request.html_url }})",
                    inline: true
                  }
                ],
                timestamp: new Date().toISOString(),
                footer: {
                  text: "CloudlyMC CI/CD",
                  icon_url: "https://github.com/${{ github.repository }}/blob/master/content/Cloudly-Abstract_Scaled-Round.png?raw=true"
                }
              }]
            };
            
            // Send to Discord
            const fetch = require('node-fetch');
            try {
              const response = await fetch(webhook, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload)
              });
              
              if (!response.ok) {
                console.error('Discord webhook failed:', response.status, response.statusText);
              } else {
                console.log('Discord notification sent successfully');
              }
            } catch (error) {
              console.error('Error sending Discord notification:', error);
            }
            
      - name: Send Discord notification for releases
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/github-script@v7
        with:
          script: |
            const webhook = '${{ secrets.DISCORD_WEBHOOK }}';
            if (!webhook) {
              console.log('Discord webhook not configured, skipping notification');
              return;
            }
            
            // Get commit info safely
            const { execSync } = require('child_process');
            const commitSha = '${{ steps.workflow-info.outputs.commit_sha }}';
            
            let commitMessage = '';
            let commitAuthor = '';
            
            try {
              commitMessage = execSync(`git log --format=%B -n 1 ${commitSha}`, { encoding: 'utf8' }).trim().split('\n')[0];
              commitAuthor = execSync(`git log --format=%an -n 1 ${commitSha}`, { encoding: 'utf8' }).trim();
            } catch (error) {
              console.error('Error getting commit info:', error);
              commitMessage = 'Unable to retrieve commit message';
              commitAuthor = 'Unknown';
            }
            
            // Clean up commit message for Discord
            commitMessage = commitMessage.replace(/"/g, '\\"').substring(0, 200);
            
            const payload = {
              embeds: [{
                title: "üöÄ New Commit on Master",
                description: commitMessage,
                color: 5763719,
                fields: [
                  {
                    name: "Author",
                    value: commitAuthor,
                    inline: true
                  },
                  {
                    name: "Branch",
                    value: "`${{ steps.workflow-info.outputs.branch }}`",
                    inline: true
                  },
                  {
                    name: "Commit",
                    value: `[${commitSha.substring(0, 7)}](${{ github.server_url }}/${{ github.repository }}/commit/${commitSha})`,
                    inline: true
                  }
                ],
                timestamp: new Date().toISOString(),
                footer: {
                  text: "CloudlyMC CI/CD",
                  icon_url: "https://github.com/${{ github.repository }}/blob/master/content/Cloudly-Abstract_Scaled-Round.png?raw=true"
                }
              }]
            };
            
            // Send to Discord
            const fetch = require('node-fetch');
            try {
              const response = await fetch(webhook, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload)
              });
              
              if (!response.ok) {
                console.error('Discord webhook failed:', response.status, response.statusText);
              } else {
                console.log('Discord notification sent successfully');
              }
            } catch (error) {
              console.error('Error sending Discord notification:', error);
            }
